fn print(s: str) {
    printf("{s}\n", "> " + s)
}

fn printref(s: ^str) {
    printf("{s}\n", "> " + s^)
}

fn f(a: [3] int16) {
    a[1] = 47
    for i := 0; i < 3; i++ {
        printf("{d} ", a[i])
    }
    printf("\n")
}

fn fr(a: ^[3] int16) {
    a[1] = 48
    for i := 0; i < 3; i++ {
        printf("{d} ", a[i])
    }
    printf("\n")
}

fn g(r: struct {x, y: int}): int {
    return r.x + r.y
}

var s: str = "Hello" + " World"

fn main() {

    t := "Hallo"    
    t +=" Welt"
    
    const hi = "Hi"
    
    greater := "Hello" <= "Hello"
    printf("{d}\n", int(greater))
    
    print(s)
    printref(&s)
    print(t)
    print(hi + ", I'm glad to see you")
    print("Privet")
    printf("{s}\n", s)
    printf("{s}\n", "Salut")
    
    //scanf("{s}", &s)
    //print(s)
    printf("{c}\n", hi[1])
    printf("{c}\n", s[1])
    printf("{c}\n", t[1])
    
    var a: [3] int16
    a[0] = 1;  a[1] = 4;  a[2] = 7
    
    f(a)
    printf("{d}\n", a[1])
    
    fr(&a)
    printf("{d}\n", a[1]) 

    var b: ^int16 = &a[2]
    printf("{d}\n", b^) 
    
    var r: struct {x, y: int}
    r.x = 2;  r.y = 3
    printf("{d}\n", g(r))
}


    