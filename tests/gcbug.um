type (
    st = struct {p: []^int}
    fooable = interface {foo()}
)

fn (s: ^st) foo() {}

fn main() {
    s := new(st)
    s.p = make([]^int, 100)
    for i := 0; i < len(s.p); i++ {
        s.p[i] = new(int)
    }
    f := fooable(s^)
    f.foo()
}
    



