type any = interface{}

fn sort(a: []any, ordered: fn (x, y: any): bool) {
    for sorted := false; !sorted {
        sorted = true
        for i := 0; i < len(a) - 1; i++ {
            if !ordered(a[i], a[i + 1]) {
                buf := a[i]
                a[i] = a[i + 1]
                a[i + 1] = buf
                sorted = false
            }
        }
    }
}

fn ordered(x, y: any): bool {
    p := ^str(x)
    q := ^str(y)
    if p == null || q == null {error("Illegal type")}
    return p^ < q^            
}

fn main() {
    a := [10]any{"red", "green", "blue", "yellow", "gray", "brown", "black", "cyan", "magenta", "white"}    
    sort(a, ordered)
    
    for i := 0; i < len(a); i++ {        
        if p := ^str(a[i]); p != null {
            printf("%s\n", p^)
        }
    }    
}