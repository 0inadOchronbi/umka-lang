

>>> Dynamic arrays - 1

a: 0 0
a: 5 7
a: 10 14
a: 15 21
a: 20 28
a: 25 35
a: 30 42
a: 35 49
a: 40 56
a: 45 63
Appending...
a: 0 0
a: 5 7
a: 10 14
a: 15 21
a: 20 28
a: 25 35
a: 30 42
a: 35 49
a: 40 56
a: 45 63
a: 666 777
b: 0 0
b: 5 7
b: 10 14
b: 15 21
b: 20 28
b: 25 35
b: 30 42
b: 35 49
b: 40 56
b: 45 63
b: 666 777
Appending...
e: 0 0
e: 5 7
e: 10 14
e: 15 21
e: 20 28
e: 25 35
e: 30 42
e: 35 49
e: 40 56
e: 45 63
e: 666 777
e: 876 765
Deleting #4...
e: 0 0
e: 5 7
e: 10 14
e: 15 21
e: 25 35
e: 30 42
e: 35 49
e: 40 56
e: 45 63
e: 666 777
e: 876 765
f: 0 0
f: 5 7
f: 10 14
f: 15 21
f: 20 28
f: 25 35
f: 30 42
f: 35 49
f: 40 56
f: 45 63
f: 666 777
f: 876 765
c: { 3 4 5 } 
Appending...
c: { 3 4 5 6 7 } 
d: { { 666 777 } { 888 999 } } 
Appending...
d: { { 666 777 } { 888 999 } { 444 555 } } 
Slicing...
{ "Hello World" "Hallo Welt" "Salut le Monde" "Privet Mir" } 
{ "Hello World" "Hallo Welt" "Salut le Monde" } 
{ "Hello World" "Hallo Welt" } 
{ "Hello World" } 
{ } 

{ "Hallo Welt" "Salut le Monde" "Privet Mir" } 
{ "Salut le Monde" "Privet Mir" } 
{ "Privet Mir" } 
{ } 

{ "Hallo Welt" } 
{ "Hallo Welt" "Salut le Monde" } 
{ "Hallo Welt" "Salut le Monde" "Privet Mir" } 

{ "Salut le Monde" } 
{ "Salut le Monde" "Privet Mir" } 

{ "Hallo Welt" "Salut le Monde" } 
{ "Hallo Welt" } 
{ } 

{ "Hello World" "Hallo Welt" "Salut le Monde" "Privet Mir" } 
{ "Hallo Welt" "Salut le Monde" "Privet Mir" } 
{ "Salut le Monde" "Privet Mir" } 
{ "Privet Mir" } 
{ } 

{ } 


>>> Dynamic arrays - 2

foo: { "Hello World" "Hallo Welt" "Salut le Monde" } 
foo: Hallo Welt = Hallo Welt : true 
foo: Salut le Monde = Salut le Monde : true 
bar: { { 3 5 } { 4 6 -8 } { 9 } { } { } }  = { { 3 5 } { 4 6 -8 } { 9 } { } { } } 


>>> Strings

Left trimming
"Hello World" 
"Hello World" 
"Hello World   " 
"Hello World   " 
"" 
"" 
Right trimming
"Hello World" 
"  Hello World" 
"Hello World" 
" 	Hello World" 
"" 
"" 
Left & right trimming
"Hello World" 
"Hello World" 
"Hello World" 
"Hello World" 
"" 
"" 


>>> Fibers

Parent fiber: i = 0   buf = 0.00
Child  fiber: i = 0   buf = 0.00
Parent fiber: i = 1   buf = 0.00
Child  fiber: i = 1   buf = 7.00
Parent fiber: i = 2   buf = 3.00
Child  fiber: i = 2   buf = 14.00
Parent fiber: i = 3   buf = 6.00
Child  fiber: i = 3   buf = 21.00
Parent fiber: i = 4   buf = 9.00
Child  fiber: i = 4   buf = 28.00
Parent fiber: i = 5   buf = 12.00
Parent fiber: i = 6   buf = 12.00
Parent fiber: i = 7   buf = 12.00
Parent fiber: i = 8   buf = 12.00
Parent fiber: i = 9   buf = 12.00


>>> Functional tools

Array = { 3 7 1 -4 2 5 } 
Sum of all squares less than 30 = 55 


>>> Garbage collection - 1

See any memory leak warnings?


>>> Garbage collection - 2

Ok

>>> Interfaces - 1

proc_fooable:
   foo: 3, 5, 7
proc_fooable_barable:
   foo: 3, 5, 9
   bar: 3, 5, 11
proc_fooable:
   foo: 3, 5, 7


>>> Interfaces - 2

{ "red" "green" "blue" "yellow" "gray" "brown" "black" "cyan" "magenta" "white" } 
{ "black" "blue" "brown" "cyan" "gray" "green" "magenta" "red" "white" "yellow" } 


>>> Interfaces - 3

woof
meow
meow
woof
meow
meow
woof
meow
meow
woof


>>> Maps - 1


Test 1
Population of Russia was 146.73 million. Now it is 146.75 million


Countries and regions more populous than Russia:
                                   WORLD: 7772.85
                          WESTERN-EUROPE: 195.48
                            WESTERN-ASIA: 280.93
                          WESTERN-AFRICA: 401.12
                              SOUTH-ASIA: 1967.13
                           SOUTH-AMERICA: 429.19
                          SOUTHEAST-ASIA: 661.85
                         SOUTHERN-EUROPE: 153.25
                         CENTRAL-AMERICA: 178.61
                                   China: 1402.38
                           MIDDLE-AFRICA: 179.76
                           United-States: 329.88
                                  EUROPE: 746.62
                               EAST-ASIA: 1641.06
                          EASTERN-EUROPE: 291.90
                          EASTERN-AFRICA: 444.97
                               Indonesia: 271.74
                                   India: 1400.10
                                    ASIA: 4625.93
                                  AFRICA: 1337.92
                        NORTHERN-AMERICA: 368.19
                         NORTHERN-AFRICA: 244.34
                                 Nigeria: 206.14
                              Bangladesh: 169.81
                                  Brazil: 211.81
         LATIN-AMERICA-AND-THE-CARIBBEAN: 651.04
                                Pakistan: 220.94

Test 2
Pushkin


Test 3
Test passed


>>> Maps - 2


Test 1
true 
false 
"English EN" "" "" 
{ "Salut le Monde" "Hello World" "Privet Mir" } 
true 

Test 2
"Better" "" "Good" 
3 { { x: 11 y: 12 } { x: 5 y: 7 } { x: 42 y: 23 } } 
"Better" 

Test 3
false 
true 20 

Test 4
"OK" 


>>> Multiple returns

-3  { 6.000000 9.000000 }  true 
-4  { 8.000000 12.000000 }  false 
{ 3 2 }  { 7 6 }  { 9 8 } 
{ 9 8 }  { 3 2 }  { 7 6 } 
{ 9 8 }  { 3 2 }  { 7 6 } 
Hello World
World Hello
23  45.600000  "Hello"  'z' 
{ 'a' 'b' }  { 'c' 'd' }  { 'e' 'f' } 
12.000000  -3.000000  17.000000 


>>> Language tour

Arr: { 2.300000 -2.050000 2.380000 } 
Got 42 
3 is odd
1 
2 
4 
8 
16 
32 
64 
128 
len = 4
4.680
Arr: { 0.500000 0.700000 0.900000 } 
Parent: i=0 buf=0
Child : i=0 buf=0
Parent: i=1 buf=0
Child : i=1 buf=7
Parent: i=2 buf=3
Child : i=2 buf=14
Parent: i=3 buf=6
Child : i=3 buf=21
Parent: i=4 buf=9
Child : i=4 buf=28
Parent: i=5 buf=12
Parent: i=6 buf=35
Parent: i=7 buf=42
Parent: i=8 buf=49
Parent: i=9 buf=56

repr():
3 
2.380000 
0.138015 
"Hello World" 
0 
"Hello World!" 
{ 2.300000 -2.050000 2.380000 } 
{ { 0 0 0 0 0 } { 0 0 0 0 0 } { 0 0 0 0 0 } { 10 20 30 40 50 } } 
{ q: { 1.000000 0.000000 0.000000 0.000000 } normalized: true } 
4.680000 
'a' 
fn 
{ 0.500000 0.700000 0.900000 } 


>>> Type equivalence

    ...passed


>>> Constant folding

-1.479060 2 true true 


>>> Item pointers

15 
{ { 0 0 } { 1 2 } { 2 4 } { 3 6 } { 4 8 } { 5 10 } } 
{ 0 0 } 
{ 1 2 } 
{ 2 4 } 
{ 3 6 } 
{ 4 8 } 
{ 5 10 } 


>>> Safe type casts

{ 1 5 7 10 } 
{ 1 4 7 } 
Hey Hello
{ 'H' 'e' 'l' 'l' 0x00 0x00 } Hell
HellHell
HellHell


>>> Non-local scope

86 


>>> Weak pointers

Test 1
42 
it's null
Test 2
13 12 
true true 


>>> Byte conversions

{ x: 23 y: -6 } 
{ 23 0 250 255 } 
{ 23 0 251 255 } 
{ x: 23 y: -5 } 


>>> UTF-8

string: ▀€$¢
bytes: 9
characters: 4
▀: U+2580
€: U+20ac
$: U+24
¢: U+a2

string: Привет, мир!
bytes: 21
characters: 12
П: U+41f
р: U+440
и: U+438
в: U+432
е: U+435
т: U+442
,: U+2c
 : U+20
м: U+43c
и: U+438
р: U+440
!: U+21



>>> Import disambiguation

Utils from lib 1
Utils from lib 2


>>> Simulated closures

running by_name_eq with name : Foo
running by_name_eq with name : "Foo"  and person : { name: "Foo" age: 24 sex: "M" } 
running by_name_eq with name : "Foo"  and person : { name: "Bar" age: 23 sex: "M" } 
running by_name_eq with name : "Foo"  and person : { name: "FooBar" age: 23 sex: "F" } 
{ true false false } 


>>> Null strings

s2 = 
"" "" "" "Hello " 
{ 0x00 } 
len = 0, 6
Hello 
true false true 
false true false 


>>> Variadic functions

>> expected  12 "Hello World" { true false true true } 
>> should work with no values 
Four averages: 5.233333 3.140000 0.000000 -1.000000 
Greeting { data: " Hello World" } { data: " Hello World Salut le Monde" } 
